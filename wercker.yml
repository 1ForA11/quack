box:
  id: golang:1.9

dep-install:
  steps:
    - wercker/setup-go-workspace:
        package-dir: github.com/pusher/quack
    - script: Install Dep
      code: |
        go get -u github.com/golang/dep/cmd/dep
    - script:
      name: Fetch dependencies
      code: |
        dep ensure
        mv ./* $WERCKER_OUTPUT_DIR

lint:
  steps:
  - wercker/setup-go-workspace:
      package-dir: github.com/pusher/quack
  - script:
      name: Install gometalinter
      code: |
        go get -u github.com/alecthomas/gometalinter
        gometalinter --install
  - script:
      name: Run gometalinter
      code: |
       gometalinter --vendor --disable-all \
       --enable=vet \
       --enable=vetshadow \
       --enable=golint \
       --enable=ineffassign \
       --enable=goconst \
       --enable=deadcode \
       --enable=gofmt \
       --enable=goimports \
       --tests $(go list ./... | grep -v /vendor/)

test:
  steps:
  - wercker/setup-go-workspace:
      package-dir: github.com/pusher/quack
  - script:
      name: go test
      code: go test $(go list ./... | grep -v /vendor/)

build:
  steps:
  - wercker/setup-go-workspace:
      package-dir: github.com/pusher/quack
  - script:
      name: go build
      code: GOPATH=/go GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o quack github.com/pusher/quack/cmd/quack
  - script:
      name: Copy to output directory
      code: cp quack "$WERCKER_OUTPUT_DIR"

push-to-ecr:
  box: alpine
  steps:
  - script:
      name: Copy binary
      code: cp quack /bin/quack
  - internal/docker-push:
      aws-access-key: $AWS_CI_ACCESS_KEY_ID
      aws-secret-key: $AWS_CI_SECRET_ACCESS_KEY
      aws-region: us-east-1
      aws-registry-id: $AWS_CI_REGISTRY_ID
      repository: pusher/quack
      tag: $WERCKER_GIT_COMMIT, $WERCKER_GIT_BRANCH, latest
      entrypoint: /bin/quack
